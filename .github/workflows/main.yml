name: FERREMAS CI/CD Pipeline

on:
  push:
    branches: [ neo ]
  pull_request:
    branches: [ neo ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - name: Checkout c√≥digo del repositorio
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Instalar ODBC Driver 18 para SQL Server
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18

    - name: Instalar dependencias del sistema
      run: |
        sudo apt-get update
        sudo apt-get install -y unixodbc-dev gcc g++

    - name: Instalar dependencias de Python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest coverage

    - name: Ejecutar tests con pytest
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: 1433
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_SERVER: ${{ secrets.DB_SERVER }}
        MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
        MAIL_PORT: ${{ secrets.MAIL_PORT }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        MAIL_DEFAULT_SENDER: ${{ secrets.MAIL_DEFAULT_SENDER }}
        BASE_URL: ${{ secrets.BASE_URL }}
        WEBPAY_COMMERCE_CODE: ${{ secrets.WEBPAY_COMMERCE_CODE }}
        WEBPAY_API_KEY: ${{ secrets.WEBPAY_API_KEY }}
        WEBPAY_INTEGRATION_TYPE: ${{ secrets.WEBPAY_INTEGRATION_TYPE }}
        BDE_EMAIL: ${{ secrets.BDE_EMAIL }}
        BDE_PASSWORD: ${{ secrets.BDE_PASSWORD }}
        FLASK_APP: ${{ secrets.FLASK_APP }}
        FLASK_ENV: ${{ secrets.FLASK_ENV }}
        TESTING: ${{ secrets.TESTING }}
      run: |
        pytest tests/ -v --tb=short

    - name: Generar y Subir Reporte de Cobertura
      if: always()
      run: |
        coverage run -m pytest tests/
        coverage html

    - name: Subir artefacto de cobertura
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
        retention-days: 30